apiVersion: v1
kind: page
spec:
  id: mQq12pH
  title: globalScope
  display: shell
  content:
    - component: Button
      name: button
      props:
        onClick:
          $$jsExpressionAction: console.log('hello')
    - component: List
      name: list
      props:
        itemCount: 1
        renderItem:
          $$template:
            - component: Text
              name: text8
    - component: Text
      name: text5
      layout:
        columnSize: 1
      props:
        value: 'Bindings: global scope access'
        variant: h2
    - component: Text
      name: text
      layout:
        columnSize: 1
      props:
        value:
          $$jsExpression: |
            `Allows ecmascript globals |test1 ${
              typeof Array !== "undefined" ? "ok" : "nok"
            }|`
    - component: Text
      name: text1
      layout:
        columnSize: 1
      props:
        value:
          $$jsExpression: |
            `Disallows DOM globals |test2 ${
              typeof document === "undefined" ? "ok" : "nok"
            }|`
    - component: Text
      name: text2
      layout:
        columnSize: 1
      props:
        value:
          $$jsExpression: |
            `Supports globalThis |test3 ${
              typeof globalThis !== "undefined" ? "ok" : "nok"
            }|`
    - component: Text
      name: text3
      props:
        value:
          $$jsExpression: |
            `Disallows localStorage globals |test4 ${
              typeof localStorage === "undefined" ? "ok" : "nok"
            }|`
      layout:
        columnSize: 1
    - component: Text
      name: text4
      props:
        value:
          $$jsExpression: |
            `Disallows globalThis.localStorage |test5 ${
              typeof globalThis.localStorage === "undefined" ? "ok" : "nok"
            }|`
      layout:
        columnSize: 1
    - component: Text
      name: text6
      props:
        value:
          $$jsExpression: |
            `Allows Intl |test6 ${
              typeof Intl?.NumberFormat !== "undefined" ? "ok" : "nok"
            }|`
    - component: Text
      name: text7
      props:
        value:
          $$jsExpression: >
            `Disallows binding to event handlers |test7 ${
              Object.prototype.hasOwnProperty.call(button, "onClick") ? "nok" : "ok"
            }|`
    - component: Text
      name: text9
      props:
        value:
          $$jsExpression: >
            `Disallows binding to list templates |test8 ${
              Object.prototype.hasOwnProperty.call(list, "renderItem") ? "nok" : "ok"
            }|`
