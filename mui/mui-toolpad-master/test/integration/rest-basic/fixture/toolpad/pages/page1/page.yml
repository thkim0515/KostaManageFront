apiVersion: v1
kind: page
spec:
  id: cn1tds0
  title: Page 1
  content:
    - component: PageRow
      name: pageRow5
      children:
        - component: Text
          name: text2
          props:
            variant: h1
            value: RUN pnpm test:rest:start
    - component: PageRow
      name: pageRow
      children:
        - component: Text
          name: typography
          props:
            value:
              $$jsExpression: |
                `query1: ${query1.data.args.query1_param1}`
    - component: PageRow
      name: pageRow1
      children:
        - component: Button
          name: button
          props:
            content: fetch query2
            onClick:
              $$jsExpressionAction: "query2.fetch({value: 'query2_value' })"
    - component: PageRow
      name: pageRow2
      children:
        - component: Text
          name: typography1
          props:
            value:
              $$jsExpression: |
                `query2: ${query2.data?.json.value}`
    - component: PageRow
      name: pageRow3
      children:
        - component: Text
          name: text
          props:
            value:
              $$jsExpression: |
                queryWithTransform.data
    - component: PageRow
      name: pageRow4
      children:
        - component: Text
          name: text1
          props:
            value:
              $$jsExpression: >
                `query4 authorization:
                ${queryWithEnv?.data.headers.Authorization}`
  queries:
    - name: query1
      query:
        kind: rest
        url: http://localhost:8080/get
        searchParams:
          - name: query1_param1
            value:
              $$jsExpression: |
                parameters.param1
        headers: []
        method: GET
      parameters:
        - name: param1
          value:
            $$jsExpression: |
              "query1_value"
    - name: query2
      mode: mutation
      query:
        kind: rest
        url: http://localhost:8080/post
        headers: []
        body:
          kind: raw
          content:
            $$jsExpression: |
              JSON.stringify(parameters)
          contentType: application/json
        method: POST
        searchParams: []
      parameters:
        - name: value
          value: incorrect
    - name: queryWithTransform
      query:
        kind: rest
        url: http://localhost:8080/get
        searchParams: []
        headers: []
        method: GET
        transform: 'return `query3: Transformed ${data?.url}`'
        transformEnabled: true
    - name: queryWithEnv
      query:
        kind: rest
        headers:
          - name: Authorization
            value:
              $$env: TEST_VAR
        method: GET
        searchParams: []
        url: http://localhost:8080/get
